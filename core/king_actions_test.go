package core

import (
	"testing"

	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func TestKingActions(t *testing.T) {
	ts := []struct {
		name    string
		board   Board
		actions []Action
		color   color
		xy      XY
	}{
		{
			name: "white king: all actions",
			board: Board{
				Board: []string{
					"♜♞♝♛♚♝♞♜",
					"♟♟♟♟♟♟♟♟",
					"        ",
					"        ",
					"  ♙♔    ",
					"        ",
					"♙♙  ♙♙♙♙",
					"♖♘♗♕ ♗♘♖",
				},
				Turn: "White",
			},
			color: ColorWhite,
			xy:    XY{3, 4},
			actions: []Action{
				{FromPiece: Piece{PieceType: PieceKing, Owner: ColorWhite, XY: XY{3, 4}}, ToXY: XY{2, 3}},
				{FromPiece: Piece{PieceType: PieceKing, Owner: ColorWhite, XY: XY{3, 4}}, ToXY: XY{3, 3}},
				{FromPiece: Piece{PieceType: PieceKing, Owner: ColorWhite, XY: XY{3, 4}}, ToXY: XY{4, 3}},
				{FromPiece: Piece{PieceType: PieceKing, Owner: ColorWhite, XY: XY{3, 4}}, ToXY: XY{4, 4}},
				{FromPiece: Piece{PieceType: PieceKing, Owner: ColorWhite, XY: XY{3, 4}}, ToXY: XY{2, 5}},
				{FromPiece: Piece{PieceType: PieceKing, Owner: ColorWhite, XY: XY{3, 4}}, ToXY: XY{3, 5}},
				{FromPiece: Piece{PieceType: PieceKing, Owner: ColorWhite, XY: XY{3, 4}}, ToXY: XY{4, 5}},
			},
		},
		{
			name: "white king: only movements that escape check",
			board: Board{
				Board: []string{
					"♜♞♝♛♚♝♞♜",
					"♟♟♟ ♟♟♟♟",
					"        ",
					"        ",
					"  ♙♔    ",
					"        ",
					"♙♙  ♙♙♙♙",
					"♖♘♗♕ ♗♘♖",
				},
				Turn: "White",
			},
			color: ColorWhite,
			xy:    XY{3, 4},
			actions: []Action{
				{FromPiece: Piece{PieceType: PieceKing, Owner: ColorWhite, XY: XY{3, 4}}, ToXY: XY{2, 3}},
				{FromPiece: Piece{PieceType: PieceKing, Owner: ColorWhite, XY: XY{3, 4}}, ToXY: XY{4, 3}},
				{FromPiece: Piece{PieceType: PieceKing, Owner: ColorWhite, XY: XY{3, 4}}, ToXY: XY{4, 4}},
				{FromPiece: Piece{PieceType: PieceKing, Owner: ColorWhite, XY: XY{3, 4}}, ToXY: XY{2, 5}},
				{FromPiece: Piece{PieceType: PieceKing, Owner: ColorWhite, XY: XY{3, 4}}, ToXY: XY{4, 5}},
			},
		},
		{
			name: "white king: only movements that don't put king in check by rook",
			board: Board{
				Board: []string{
					" ♞♝♛♚♝♞ ",
					" ♟♟♟♟♟♟ ",
					"  ♜ ♜   ",
					"        ",
					"  ♙♔    ",
					"        ",
					"♙♙  ♙♙♙♙",
					"♖♘♗♕ ♗♘♖",
				},
				Turn: "White",
			},
			color: ColorWhite,
			xy:    XY{3, 4},
			actions: []Action{
				{FromPiece: Piece{PieceType: PieceKing, Owner: ColorWhite, XY: XY{3, 4}}, ToXY: XY{3, 3}},
				{FromPiece: Piece{PieceType: PieceKing, Owner: ColorWhite, XY: XY{3, 4}}, ToXY: XY{3, 5}},
				{FromPiece: Piece{PieceType: PieceKing, Owner: ColorWhite, XY: XY{3, 4}}, ToXY: XY{2, 5}},
			},
		},
		{
			name: "white king: only movements that don't put king in check by bishop",
			board: Board{
				Board: []string{
					"♜♞ ♛♚ ♞♜",
					"♟ ♟♟♟♟ ♟",
					"  ♝ ♝   ",
					"        ",
					"  ♙♔    ",
					"        ",
					"♙♙  ♙♙♙♙",
					"♖♘♗♕ ♗♘♖",
				},
				Turn: "White",
			},
			color: ColorWhite,
			xy:    XY{3, 4},
			actions: []Action{
				{FromPiece: Piece{PieceType: PieceKing, Owner: ColorWhite, XY: XY{3, 4}}, ToXY: XY{2, 3}},
				{FromPiece: Piece{PieceType: PieceKing, Owner: ColorWhite, XY: XY{3, 4}}, ToXY: XY{4, 3}},
				{FromPiece: Piece{PieceType: PieceKing, Owner: ColorWhite, XY: XY{3, 4}}, ToXY: XY{2, 5}},
				{FromPiece: Piece{PieceType: PieceKing, Owner: ColorWhite, XY: XY{3, 4}}, ToXY: XY{3, 5}},
				{FromPiece: Piece{PieceType: PieceKing, Owner: ColorWhite, XY: XY{3, 4}}, ToXY: XY{4, 5}},
			},
		},
		{
			name: "white king: only movements that don't put king in check by knight",
			board: Board{
				Board: []string{
					"♜ ♝♛♚♝♞♜",
					"♟♟♟♟♟♟♟♟",
					"   ♞    ",
					"        ",
					"  ♙♔    ",
					"        ",
					"♙♙  ♙♙♙♙",
					"♖♘♗♕ ♗♘♖",
				},
				Turn: "White",
			},
			color: ColorWhite,
			xy:    XY{3, 4},
			actions: []Action{
				{FromPiece: Piece{PieceType: PieceKing, Owner: ColorWhite, XY: XY{3, 4}}, ToXY: XY{2, 3}},
				{FromPiece: Piece{PieceType: PieceKing, Owner: ColorWhite, XY: XY{3, 4}}, ToXY: XY{3, 3}},
				{FromPiece: Piece{PieceType: PieceKing, Owner: ColorWhite, XY: XY{3, 4}}, ToXY: XY{4, 3}},
				{FromPiece: Piece{PieceType: PieceKing, Owner: ColorWhite, XY: XY{3, 4}}, ToXY: XY{2, 5}},
				{FromPiece: Piece{PieceType: PieceKing, Owner: ColorWhite, XY: XY{3, 4}}, ToXY: XY{3, 5}},
				{FromPiece: Piece{PieceType: PieceKing, Owner: ColorWhite, XY: XY{3, 4}}, ToXY: XY{4, 5}},
			},
		},
		{
			name: "white king: can capture opponent piece threatening it",
			board: Board{
				Board: []string{
					"♜♞♝♛♚♝♞♜",
					"♟♟ ♟♟♟♟♟",
					"        ",
					"  ♟     ",
					"  ♙♔    ",
					"        ",
					"♙♙  ♙♙♙♙",
					"♖♘♗♕ ♗♘♖",
				},
				Turn: "White",
			},
			color: ColorWhite,
			xy:    XY{3, 4},
			actions: []Action{
				{FromPiece: Piece{PieceType: PieceKing, Owner: ColorWhite, XY: XY{3, 4}}, ToXY: XY{2, 3}, IsCapture: true, CapturedPiece: Piece{PieceType: PiecePawn, Owner: ColorBlack, XY: XY{2, 3}}},
				{FromPiece: Piece{PieceType: PieceKing, Owner: ColorWhite, XY: XY{3, 4}}, ToXY: XY{3, 3}},
				{FromPiece: Piece{PieceType: PieceKing, Owner: ColorWhite, XY: XY{3, 4}}, ToXY: XY{4, 3}},
				{FromPiece: Piece{PieceType: PieceKing, Owner: ColorWhite, XY: XY{3, 4}}, ToXY: XY{4, 4}},
				{FromPiece: Piece{PieceType: PieceKing, Owner: ColorWhite, XY: XY{3, 4}}, ToXY: XY{2, 5}},
				{FromPiece: Piece{PieceType: PieceKing, Owner: ColorWhite, XY: XY{3, 4}}, ToXY: XY{3, 5}},
				{FromPiece: Piece{PieceType: PieceKing, Owner: ColorWhite, XY: XY{3, 4}}, ToXY: XY{4, 5}},
			},
		},
		{
			name: "black king: can castle kingside or move right",
			board: Board{
				Board: []string{
					"♜♞♝♛♚  ♜",
					"♟♟♟♟♟♟♟♟",
					"        ",
					"        ",
					"        ",
					"        ",
					"♙♙♙♙♙♙♙♙",
					"♖♘♗♕♔♗♘♖",
				},
				Turn:                    "Black",
				CanBlackQueensideCastle: true,
				CanBlackKingsideCastle:  true,
				CanWhiteQueensideCastle: true,
				CanWhiteKingsideCastle:  true,
			},
			color: ColorBlack,
			xy:    XY{4, 0},
			actions: []Action{
				{FromPiece: Piece{PieceType: PieceKing, Owner: ColorBlack, XY: XY{4, 0}}, ToXY: XY{5, 0}},
				{FromPiece: Piece{PieceType: PieceKing, Owner: ColorBlack, XY: XY{4, 0}}, ToXY: XY{6, 0}, IsCastle: true, IsKingsideCastle: true},
			},
		},
		{
			name: "black king: can't castle kingside due to a square in check",
			board: Board{
				Board: []string{
					"♜♞♝♛♚  ♜",
					"♟♟♟♟♟ ♟♟",
					"        ",
					"        ",
					"        ",
					"     ♖  ",
					"♙♙♙♙♙♙♙ ",
					"♖♘♗♕♔♗♘ ",
				},
				Turn:                    "Black",
				CanBlackQueensideCastle: true,
				CanBlackKingsideCastle:  true,
				CanWhiteQueensideCastle: true,
				CanWhiteKingsideCastle:  false,
			},
			color:   ColorBlack,
			xy:      XY{4, 0},
			actions: []Action{},
		},
		{
			name: "black king: can't castle kingside due to another square in check",
			board: Board{
				Board: []string{
					"♜♞♝♛♚  ♜",
					"♟♟♟♟♟♟ ♟",
					"        ",
					"        ",
					"        ",
					"      ♖ ",
					"♙♙♙♙♙♙♙ ",
					"♖♘♗♕♔♗♘ ",
				},
				Turn:                    "Black",
				CanBlackQueensideCastle: true,
				CanBlackKingsideCastle:  true,
				CanWhiteQueensideCastle: true,
				CanWhiteKingsideCastle:  false,
			},
			color: ColorBlack,
			xy:    XY{4, 0},
			actions: []Action{
				{FromPiece: Piece{PieceType: PieceKing, Owner: ColorBlack, XY: XY{4, 0}}, ToXY: XY{5, 0}},
			},
		},
		{
			name: "black king: can't castle kingside due to being in check",
			board: Board{
				Board: []string{
					"♜♞♝♛♚  ♜",
					"♟♟♟♟ ♟♟♟",
					"        ",
					"        ",
					"        ",
					"    ♖   ",
					"♙♙♙♙♙♙♙ ",
					"♖♘♗♕♔♗♘ ",
				},
				Turn:                    "Black",
				CanBlackQueensideCastle: true,
				CanBlackKingsideCastle:  true,
				CanWhiteQueensideCastle: true,
				CanWhiteKingsideCastle:  false,
			},
			color: ColorBlack,
			xy:    XY{4, 0},
			actions: []Action{
				{FromPiece: Piece{PieceType: PieceKing, Owner: ColorBlack, XY: XY{4, 0}}, ToXY: XY{5, 0}},
			},
		},
		{
			name: "black king: can castle queenside or move left",
			board: Board{
				Board: []string{
					"♜   ♚♝♞♜",
					"♟♟♟♟♟♟♟♟",
					"        ",
					"        ",
					"        ",
					"        ",
					"♙♙♙♙♙♙♙♙",
					"♖♘♗♕♔♗♘♖",
				},
				Turn:                    "Black",
				CanBlackQueensideCastle: true,
				CanBlackKingsideCastle:  true,
				CanWhiteQueensideCastle: true,
				CanWhiteKingsideCastle:  true,
			},
			color: ColorBlack,
			xy:    XY{4, 0},
			actions: []Action{
				{FromPiece: Piece{PieceType: PieceKing, Owner: ColorBlack, XY: XY{4, 0}}, ToXY: XY{3, 0}},
				{FromPiece: Piece{PieceType: PieceKing, Owner: ColorBlack, XY: XY{4, 0}}, ToXY: XY{2, 0}, IsCastle: true, IsQueensideCastle: true},
			},
		},
		{
			name: "black king: can't castle queenside because there's a square in check",
			board: Board{
				Board: []string{
					"♜   ♚♝♞♜",
					"♟ ♟♟♟♟♟♟",
					"        ",
					"        ",
					"        ",
					" ♖      ",
					" ♙♙♙♙♙♙♙",
					" ♘♗♕♔♗♘♖",
				},
				Turn:                    "Black",
				CanBlackQueensideCastle: true,
				CanBlackKingsideCastle:  true,
				CanWhiteQueensideCastle: false,
				CanWhiteKingsideCastle:  true,
			},
			color: ColorBlack,
			xy:    XY{4, 0},
			actions: []Action{
				{FromPiece: Piece{PieceType: PieceKing, Owner: ColorBlack, XY: XY{4, 0}}, ToXY: XY{3, 0}},
			},
		},
		{
			name: "black king: can't castle queenside because there's another square in check",
			board: Board{
				Board: []string{
					"♜   ♚♝♞♜",
					"♟♟ ♟♟♟♟♟",
					"        ",
					"        ",
					"        ",
					"  ♖     ",
					" ♙♙♙♙♙♙♙",
					" ♘♗♕♔♗♘♖",
				},
				Turn:                    "Black",
				CanBlackQueensideCastle: true,
				CanBlackKingsideCastle:  true,
				CanWhiteQueensideCastle: false,
				CanWhiteKingsideCastle:  true,
			},
			color: ColorBlack,
			xy:    XY{4, 0},
			actions: []Action{
				{FromPiece: Piece{PieceType: PieceKing, Owner: ColorBlack, XY: XY{4, 0}}, ToXY: XY{3, 0}},
			},
		},
		{
			name: "black king: can't castle queenside because there's a third square in check",
			board: Board{
				Board: []string{
					"♜   ♚♝♞♜",
					"♟♟  ♟♟♟♟",
					"        ",
					"        ",
					"        ",
					"   ♖    ",
					" ♙♙♙♙♙♙♙",
					" ♘♗♕♔♗♘♖",
				},
				Turn:                    "Black",
				CanBlackQueensideCastle: true,
				CanBlackKingsideCastle:  true,
				CanWhiteQueensideCastle: false,
				CanWhiteKingsideCastle:  true,
			},
			color:   ColorBlack,
			xy:      XY{4, 0},
			actions: []Action{},
		},
		{
			name: "black king: can't castle queenside because the king is in check",
			board: Board{
				Board: []string{
					"♜   ♚♝♞♜",
					"♟♟♟♟ ♟♟♟",
					"        ",
					"        ",
					"        ",
					"    ♖   ",
					" ♙♙♙♙♙♙♙",
					" ♘♗♕♔♗♘♖",
				},
				Turn:                    "Black",
				CanBlackQueensideCastle: true,
				CanBlackKingsideCastle:  true,
				CanWhiteQueensideCastle: false,
				CanWhiteKingsideCastle:  true,
			},
			color: ColorBlack,
			xy:    XY{4, 0},
			actions: []Action{
				{FromPiece: Piece{PieceType: PieceKing, Owner: ColorBlack, XY: XY{4, 0}}, ToXY: XY{3, 0}},
			},
		},
		{
			name: "black king: can't castle kingside because it's not available anymore",
			board: Board{
				Board: []string{
					"♜♞♝♛♚  ♜",
					"♟♟♟♟♟♟♟♟",
					"        ",
					"        ",
					"        ",
					"        ",
					"♙♙♙♙♙♙♙♙",
					"♖♘♗♕♔♗♘♖",
				},
				Turn:                    "Black",
				CanBlackQueensideCastle: true,
				CanBlackKingsideCastle:  false,
				CanWhiteQueensideCastle: true,
				CanWhiteKingsideCastle:  true,
			},
			color: ColorBlack,
			xy:    XY{4, 0},
			actions: []Action{
				{FromPiece: Piece{PieceType: PieceKing, Owner: ColorBlack, XY: XY{4, 0}}, ToXY: XY{5, 0}},
			},
		},
		{
			name: "black king: can't castle queenside because it's not available anymore",
			board: Board{
				Board: []string{
					"♜   ♚♝♞♜",
					"♟♟♟♟♟♟♟♟",
					"        ",
					"        ",
					"        ",
					"        ",
					"♙♙♙♙♙♙♙♙",
					"♖♘♗♕♔♗♘♖",
				},
				Turn:                    "Black",
				CanBlackQueensideCastle: false,
				CanBlackKingsideCastle:  true,
				CanWhiteQueensideCastle: true,
				CanWhiteKingsideCastle:  true,
			},
			color: ColorBlack,
			xy:    XY{4, 0},
			actions: []Action{
				{FromPiece: Piece{PieceType: PieceKing, Owner: ColorBlack, XY: XY{4, 0}}, ToXY: XY{3, 0}},
			},
		},
		{
			name: "white king: can castle kingside or move right",
			board: Board{
				Board: []string{
					"♜♞♝♛♚♝♞♜",
					"♟♟♟♟♟♟♟♟",
					"        ",
					"        ",
					"        ",
					"        ",
					"♙♙♙♙♙♙♙♙",
					"♖♘♗♕♔  ♖",
				},
				Turn:                    "White",
				CanBlackQueensideCastle: true,
				CanBlackKingsideCastle:  true,
				CanWhiteQueensideCastle: true,
				CanWhiteKingsideCastle:  true,
			},
			color: ColorWhite,
			xy:    XY{4, 7},
			actions: []Action{
				{FromPiece: Piece{PieceType: PieceKing, Owner: ColorWhite, XY: XY{4, 7}}, ToXY: XY{5, 7}},
				{FromPiece: Piece{PieceType: PieceKing, Owner: ColorWhite, XY: XY{4, 7}}, ToXY: XY{6, 7}, IsCastle: true, IsKingsideCastle: true},
			},
		},
		{
			name: "white king: can't castle kingside because there's a square in check",
			board: Board{
				Board: []string{
					"♜♞♝♛♚♝♞ ",
					"♟♟♟♟♟♟♟ ",
					"      ♜ ",
					"        ",
					"        ",
					"        ",
					"♙♙♙♙♙♙ ♙",
					"♖♘♗♕♔  ♖",
				},
				Turn:                    "White",
				CanBlackQueensideCastle: true,
				CanBlackKingsideCastle:  false,
				CanWhiteQueensideCastle: true,
				CanWhiteKingsideCastle:  true,
			},
			color: ColorWhite,
			xy:    XY{4, 7},
			actions: []Action{
				{FromPiece: Piece{PieceType: PieceKing, Owner: ColorWhite, XY: XY{4, 7}}, ToXY: XY{5, 7}},
			},
		},
		{
			name: "white king: can't castle kingside because there's another square in check",
			board: Board{
				Board: []string{
					"♜♞♝♛♚♝♞ ",
					"♟♟♟♟♟♟♟ ",
					"     ♜  ",
					"        ",
					"        ",
					"        ",
					"♙♙♙♙♙ ♙♙",
					"♖♘♗♕♔  ♖",
				},
				Turn:                    "White",
				CanBlackQueensideCastle: true,
				CanBlackKingsideCastle:  false,
				CanWhiteQueensideCastle: true,
				CanWhiteKingsideCastle:  true,
			},
			color:   ColorWhite,
			xy:      XY{4, 7},
			actions: []Action{},
		},
		{
			name: "white king: can't castle kingside because the king is in check",
			board: Board{
				Board: []string{
					"♜♞♝♛♚♝♞ ",
					"♟♟♟♟♟♟♟ ",
					"    ♜   ",
					"        ",
					"        ",
					"        ",
					"♙♙♙♙ ♙♙♙",
					"♖♘♗♕♔  ♖",
				},
				Turn:                    "White",
				CanBlackQueensideCastle: true,
				CanBlackKingsideCastle:  false,
				CanWhiteQueensideCastle: true,
				CanWhiteKingsideCastle:  true,
			},
			color: ColorWhite,
			xy:    XY{4, 7},
			actions: []Action{
				{FromPiece: Piece{PieceType: PieceKing, Owner: ColorWhite, XY: XY{4, 7}}, ToXY: XY{5, 7}},
			},
		},
		{
			name: "white king: can castle queenside or move left",
			board: Board{
				Board: []string{
					"♜♞♝♛♚♝♞♜",
					"♟♟♟♟♟♟♟♟",
					"        ",
					"        ",
					"        ",
					"        ",
					"♙♙♙♙♙♙♙♙",
					"♖   ♔♗♘♖",
				},
				Turn:                    "White",
				CanBlackQueensideCastle: true,
				CanBlackKingsideCastle:  true,
				CanWhiteQueensideCastle: true,
				CanWhiteKingsideCastle:  true,
			},
			color: ColorWhite,
			xy:    XY{4, 7},
			actions: []Action{
				{FromPiece: Piece{PieceType: PieceKing, Owner: ColorWhite, XY: XY{4, 7}}, ToXY: XY{3, 7}},
				{FromPiece: Piece{PieceType: PieceKing, Owner: ColorWhite, XY: XY{4, 7}}, ToXY: XY{2, 7}, IsCastle: true, IsQueensideCastle: true},
			},
		},
		{
			name: "white king: can't castle queenside because there's a square in check",
			board: Board{
				Board: []string{
					" ♞♝♛♚♝♞♜",
					" ♟♟♟♟♟♟♟",
					" ♜      ",
					"        ",
					"        ",
					"        ",
					"♙ ♙♙♙♙♙♙",
					"♖   ♔♗♘♖",
				},
				Turn:                    "White",
				CanBlackQueensideCastle: false,
				CanBlackKingsideCastle:  true,
				CanWhiteQueensideCastle: true,
				CanWhiteKingsideCastle:  true,
			},
			color: ColorWhite,
			xy:    XY{4, 7},
			actions: []Action{
				{FromPiece: Piece{PieceType: PieceKing, Owner: ColorWhite, XY: XY{4, 7}}, ToXY: XY{3, 7}},
			},
		},
		{
			name: "white king: can't castle queenside because there's another square in check",
			board: Board{
				Board: []string{
					" ♞♝♛♚♝♞♜",
					" ♟♟♟♟♟♟♟",
					"  ♜     ",
					"        ",
					"        ",
					"        ",
					"♙♙ ♙♙♙♙♙",
					"♖   ♔♗♘♖",
				},
				Turn:                    "White",
				CanBlackQueensideCastle: false,
				CanBlackKingsideCastle:  true,
				CanWhiteQueensideCastle: true,
				CanWhiteKingsideCastle:  true,
			},
			color: ColorWhite,
			xy:    XY{4, 7},
			actions: []Action{
				{FromPiece: Piece{PieceType: PieceKing, Owner: ColorWhite, XY: XY{4, 7}}, ToXY: XY{3, 7}},
			},
		},
		{
			name: "white king: can't castle queenside because there's a third square in check",
			board: Board{
				Board: []string{
					" ♞♝♛♚♝♞♜",
					" ♟♟♟♟♟♟♟",
					"   ♜    ",
					"        ",
					"        ",
					"        ",
					"♙♙♙ ♙♙♙♙",
					"♖   ♔♗♘♖",
				},
				Turn:                    "White",
				CanBlackQueensideCastle: false,
				CanBlackKingsideCastle:  true,
				CanWhiteQueensideCastle: true,
				CanWhiteKingsideCastle:  true,
			},
			color:   ColorWhite,
			xy:      XY{4, 7},
			actions: []Action{},
		},
		{
			name: "white king: can't castle queenside because there's a third square in check",
			board: Board{
				Board: []string{
					" ♞♝♛♚♝♞♜",
					" ♟♟♟♟♟♟♟",
					"    ♜   ",
					"        ",
					"        ",
					"        ",
					"♙♙♙♙ ♙♙♙",
					"♖   ♔♗♘♖",
				},
				Turn:                    "White",
				CanBlackQueensideCastle: false,
				CanBlackKingsideCastle:  true,
				CanWhiteQueensideCastle: true,
				CanWhiteKingsideCastle:  true,
			},
			color: ColorWhite,
			xy:    XY{4, 7},
			actions: []Action{
				{FromPiece: Piece{PieceType: PieceKing, Owner: ColorWhite, XY: XY{4, 7}}, ToXY: XY{3, 7}},
			},
		},
		{
			name: "white king: can't castle kingside because it's not available anymore",
			board: Board{
				Board: []string{
					"♜♞♝♛♚♝♞♜",
					"♟♟♟♟♟♟♟♟",
					"        ",
					"        ",
					"        ",
					"        ",
					"♙♙♙♙♙♙♙♙",
					"♖♘♗♕♔  ♖",
				},
				Turn:                    "White",
				CanBlackQueensideCastle: true,
				CanBlackKingsideCastle:  true,
				CanWhiteQueensideCastle: true,
				CanWhiteKingsideCastle:  false,
			},
			color: ColorWhite,
			xy:    XY{4, 7},
			actions: []Action{
				{FromPiece: Piece{PieceType: PieceKing, Owner: ColorWhite, XY: XY{4, 7}}, ToXY: XY{5, 7}},
			},
		},
		{
			name: "white king: can't castle queenside because it's not available anymore",
			board: Board{
				Board: []string{
					"♜♞♝♛♚♝♞♜",
					"♟♟♟♟♟♟♟♟",
					"        ",
					"        ",
					"        ",
					"        ",
					"♙♙♙♙♙♙♙♙",
					"♖   ♔♗♘♖",
				},
				Turn:                    "White",
				CanBlackQueensideCastle: true,
				CanBlackKingsideCastle:  true,
				CanWhiteQueensideCastle: false,
				CanWhiteKingsideCastle:  true,
			},
			color: ColorWhite,
			xy:    XY{4, 7},
			actions: []Action{
				{FromPiece: Piece{PieceType: PieceKing, Owner: ColorWhite, XY: XY{4, 7}}, ToXY: XY{3, 7}},
			},
		},
	}
	for _, tc := range ts {
		t.Run(tc.name, func(t *testing.T) {
			g, err := NewGameFromBoard(tc.board)
			require.NoError(t, err)
			assert.ElementsMatch(t, tc.actions, g.Pieces[tc.color][tc.xy].calculateAllActions(g))
		})
	}
}
